{
  "openapi": "3.0.0",
  "info": {
    "version": "1.0.0",
    "title": "Simple API",
    "description": "A simple API to learn how Swagger works"
  },
  "servers": [
    {
      "url": "http://localhost:3000/api/v1"
    }
  ],
  "paths": {
    "/users": {
      "get": {
        "summary": "Returns a list of users",
        "description": "Retrieve an array of users from the database.",
        "responses": {
          "200": {
            "description": "An array of users",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/User"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          }
        }
      },
      "post": {
        "summary": "Add a new user",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad request"
          },
          "500": {
            "description": "Server Error"
          }
        }
      }
    },
    "/users/{userId}": {
      "get": {
        "summary": "Get a single user",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A user object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "404": {
            "description": "User not found"
          },
          "500": {
            "description": "Server Error"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "User": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The user ID"
          },
          "name": {
            "type": "string",
            "description": "The user's name"
          },
          "age": {
            "type": "integer",
            "description": "The user's age"
          }
        },
        "required": ["id", "name"]
      }
    }
  }
}
